{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/function/getUserNameByUserId.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","users","map","userTodo","find","customer","getUserNameByUserId","Fragment","App","useState","todosDefault","setTodos","customers","newTodo","setNewTodo","errors","setErrors","handleAddTodo","event","preventDefault","trim","nextId","length","Math","max","newTodoWithId","prevTodos","action","method","type","placeholder","value","onChange","target","replace","parseInt","disabled","onClick","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adb0bf13.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../types/types';\n\ntype UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo, User } from '../types/types';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoInfoProps = {\n  todo: Todo;\n  user: User;\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo, user }) => {\n  return (\n    <article key={todo.id} data-id={todo.id} className=\"TodoInfo\">\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { getUserNameByUserId } from '../function/getUserNameByUserId';\nimport { Todo, User } from '../types/types';\n\ntype TodoListProps = {\n  todos: Todo[];\n  users: User[];\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        const user = getUserNameByUserId(todo.userId, todos, users);\n\n        if (!user) {\n          return null;\n        }\n\n        return (\n          <React.Fragment key={todo.id}>\n            <TodoInfo todo={todo} user={user} />\n          </React.Fragment>\n        );\n      })}\n    </section>\n  );\n};\n","import { Todo, User } from '../types/types';\n\nexport function getUserNameByUserId(\n  userId: number,\n  todos: Todo[],\n  users: User[],\n): User | undefined {\n  const userTodo: Todo | undefined = todos.find(\n    (todo) => todo.userId === userId,\n  );\n\n  if (!userTodo) {\n    return undefined;\n  }\n\n  const user: User | undefined = users.find(\n    (customer) => customer.id === userTodo.userId,\n  );\n\n  return user;\n}\n","import './App.scss';\nimport React, { useState } from 'react';\nimport customers from './api/users';\nimport todosDefault from './api/todos';\nimport { TodoList } from './components/TodoList';\n\ntype Todo = {\n  id: number;\n  title: string;\n  userId: number;\n  completed: boolean;\n};\n\ntype User = {\n  id: number;\n  name: string;\n  username: string,\n  email: string,\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosDefault);\n  const [users] = useState<User[]>(customers);\n\n  const [newTodo, setNewTodo] = useState<Todo>({\n    id: 1,\n    title: '',\n    userId: 0,\n    completed: false,\n  });\n\n  const [errors, setErrors] = useState<{ title: string; user: string }>({\n    title: '',\n    user: '',\n  });\n\n  const getNextId = () => {\n    const maxId = todos.length > 0 ? Math.max(\n      ...todos.map((todo) => todo.id),\n    ) : 0;\n\n    return maxId + 1;\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const title = event.target.value;\n\n    setNewTodo({\n      ...newTodo,\n      title: title.replace(/[^a-zA-Z0-9\\s]/g, ''),\n    });\n    if (title.trim() === '') {\n      setErrors({ ...errors, title: 'Please enter a title' });\n    } else {\n      setErrors({ ...errors, title: '' });\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const userId = parseInt(event.target.value, 10);\n\n    setNewTodo({ ...newTodo, userId });\n    if (userId === 0) {\n      setErrors({ ...errors, user: 'Please choose a user' });\n    } else {\n      setErrors({ ...errors, user: '' });\n    }\n  };\n\n  const handleAddTodo = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (newTodo.title.trim() === '' || newTodo.userId === 0) {\n      setErrors({\n        title: newTodo.title.trim() === '' ? 'Please enter a title' : '',\n        user: newTodo.userId === 0 ? 'Please choose a user' : '',\n      });\n\n      return;\n    }\n\n    const nextId = getNextId();\n\n    const newTodoWithId: Todo = {\n      ...newTodo,\n      id: nextId,\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodoWithId]);\n\n    setNewTodo({\n      id: nextId + 1,\n      title: '',\n      userId: 0,\n      completed: false,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"#\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Add you task\"\n            value={newTodo.title}\n            onChange={handleTitleChange}\n          />\n          <span className=\"error\">{errors.title}</span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={newTodo.userId}\n            onChange={handleUserChange}\n          >\n            <option value={0} disabled>\n              Choose a user\n            </option>\n            {users.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">{errors.user}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(e) => handleAddTodo(e)}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}